"""Initial database setup

Revision ID: d196ad3a3192
Revises: 
Create Date: 2025-06-14 09:30:43.364423

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd196ad3a3192'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cpa_jurisdictions',
    sa.Column('code', sa.String(length=2), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('board_name', sa.String(length=200), nullable=True),
    sa.Column('board_website', sa.String(length=500), nullable=True),
    sa.Column('licensing_website', sa.String(length=500), nullable=True),
    sa.Column('general_hours_required', sa.Integer(), nullable=False),
    sa.Column('ethics_hours_required', sa.Integer(), nullable=True),
    sa.Column('live_hours_required', sa.Integer(), nullable=True),
    sa.Column('reporting_period_type', sa.String(length=20), nullable=True),
    sa.Column('reporting_period_months', sa.Integer(), nullable=True),
    sa.Column('renewal_date_pattern', sa.String(length=100), nullable=True),
    sa.Column('reporting_period_description', sa.String(length=200), nullable=True),
    sa.Column('self_study_max_hours', sa.Integer(), nullable=True),
    sa.Column('carry_forward_max_hours', sa.Integer(), nullable=True),
    sa.Column('minimum_hours_per_year', sa.Integer(), nullable=True),
    sa.Column('ce_broker_required', sa.Boolean(), nullable=True),
    sa.Column('ce_broker_mandatory_date', sa.Date(), nullable=True),
    sa.Column('nasba_last_updated', sa.Date(), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('data_confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('data_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('endpoint_url', sa.String(length=500), nullable=True),
    sa.Column('api_key_required', sa.Boolean(), nullable=True),
    sa.Column('authentication_method', sa.String(length=50), nullable=True),
    sa.Column('update_frequency', sa.String(length=50), nullable=True),
    sa.Column('last_successful_update', sa.DateTime(), nullable=True),
    sa.Column('last_attempted_update', sa.DateTime(), nullable=True),
    sa.Column('update_status', sa.String(length=20), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_sources_id'), 'data_sources', ['id'], unique=False)
    op.create_table('nasba_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sponsor_id', sa.String(length=20), nullable=True),
    sa.Column('sponsor_name', sa.String(length=200), nullable=False),
    sa.Column('registry_status', sa.String(length=20), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('contact_email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('group_live', sa.Boolean(), nullable=True),
    sa.Column('group_internet', sa.Boolean(), nullable=True),
    sa.Column('self_study', sa.Boolean(), nullable=True),
    sa.Column('nano_learning', sa.Boolean(), nullable=True),
    sa.Column('last_verified', sa.Date(), nullable=True),
    sa.Column('verification_source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nasba_providers_id'), 'nasba_providers', ['id'], unique=False)
    op.create_index(op.f('ix_nasba_providers_sponsor_id'), 'nasba_providers', ['sponsor_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('license_number', sa.String(), nullable=True),
    sa.Column('primary_jurisdiction', sa.String(length=2), nullable=True),
    sa.Column('secondary_jurisdictions', sa.String(), nullable=True),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=True),
    sa.Column('onboarding_step', sa.String(), nullable=True),
    sa.Column('license_issue_date', sa.Date(), nullable=True),
    sa.Column('next_renewal_date', sa.Date(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('linkedin_url', sa.String(length=500), nullable=True),
    sa.Column('twitter_handle', sa.String(length=100), nullable=True),
    sa.Column('facebook_url', sa.String(length=500), nullable=True),
    sa.Column('instagram_handle', sa.String(length=100), nullable=True),
    sa.Column('website_url', sa.String(length=500), nullable=True),
    sa.Column('firm_name', sa.String(length=200), nullable=True),
    sa.Column('firm_website', sa.String(length=500), nullable=True),
    sa.Column('firm_phone', sa.String(length=20), nullable=True),
    sa.Column('firm_address_line1', sa.String(length=200), nullable=True),
    sa.Column('firm_address_line2', sa.String(length=200), nullable=True),
    sa.Column('firm_city', sa.String(length=100), nullable=True),
    sa.Column('firm_state', sa.String(length=2), nullable=True),
    sa.Column('firm_zip_code', sa.String(length=10), nullable=True),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('specializations', sa.String(length=500), nullable=True),
    sa.Column('professional_certifications', sa.String(length=500), nullable=True),
    sa.Column('ce_broker_id', sa.String(), nullable=True),
    sa.Column('ce_broker_auto_sync', sa.Boolean(), nullable=True),
    sa.Column('email_reminders', sa.Boolean(), nullable=True),
    sa.Column('newsletter_subscription', sa.Boolean(), nullable=True),
    sa.Column('marketing_emails', sa.Boolean(), nullable=True),
    sa.Column('public_profile', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('compliance_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('jurisdiction_code', sa.String(length=2), nullable=True),
    sa.Column('reporting_period_start', sa.Date(), nullable=False),
    sa.Column('reporting_period_end', sa.Date(), nullable=False),
    sa.Column('total_hours_completed', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('ethics_hours_completed', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('live_hours_completed', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('carry_forward_hours', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('is_compliant', sa.Boolean(), nullable=True),
    sa.Column('hours_needed', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('ethics_hours_needed', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('last_calculated', sa.DateTime(), nullable=True),
    sa.Column('next_renewal_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_code'], ['cpa_jurisdictions.code'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_compliance_records_id'), 'compliance_records', ['id'], unique=False)
    op.create_table('cpe_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_name', sa.String(), nullable=False),
    sa.Column('course_code', sa.String(), nullable=True),
    sa.Column('provider_name', sa.String(), nullable=False),
    sa.Column('field_of_study', sa.String(), nullable=True),
    sa.Column('cpe_credits', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('is_ethics', sa.Boolean(), nullable=True),
    sa.Column('delivery_method', sa.String(), nullable=True),
    sa.Column('nasba_sponsor_id', sa.String(), nullable=True),
    sa.Column('nasba_registry_verified', sa.Boolean(), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=False),
    sa.Column('reporting_period_start', sa.Date(), nullable=True),
    sa.Column('reporting_period_end', sa.Date(), nullable=True),
    sa.Column('certificate_filename', sa.String(), nullable=True),
    sa.Column('certificate_url', sa.String(), nullable=True),
    sa.Column('certificate_hash', sa.String(), nullable=True),
    sa.Column('extracted_at', sa.DateTime(), nullable=True),
    sa.Column('extraction_confidence', sa.Float(), nullable=True),
    sa.Column('manually_verified', sa.Boolean(), nullable=True),
    sa.Column('ce_broker_submitted', sa.Boolean(), nullable=True),
    sa.Column('ce_broker_submission_date', sa.DateTime(), nullable=True),
    sa.Column('ce_broker_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cpe_records_id'), 'cpe_records', ['id'], unique=False)
    op.create_table('data_sync_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_source_id', sa.Integer(), nullable=True),
    sa.Column('sync_type', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_updated', sa.Integer(), nullable=True),
    sa.Column('records_added', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_sync_logs_id'), 'data_sync_logs', ['id'], unique=False)
    op.create_table('onboarding_progress',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('current_step', sa.String(), nullable=True),
    sa.Column('completed_steps', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('step_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requirement_changes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jurisdiction_code', sa.String(length=2), nullable=True),
    sa.Column('field_name', sa.String(length=50), nullable=False),
    sa.Column('old_value', sa.String(length=200), nullable=True),
    sa.Column('new_value', sa.String(length=200), nullable=True),
    sa.Column('change_reason', sa.String(length=200), nullable=True),
    sa.Column('change_source', sa.String(length=50), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=True),
    sa.Column('verified_by', sa.String(length=100), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_code'], ['cpa_jurisdictions.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_requirement_changes_id'), 'requirement_changes', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_requirement_changes_id'), table_name='requirement_changes')
    op.drop_table('requirement_changes')
    op.drop_table('onboarding_progress')
    op.drop_index(op.f('ix_data_sync_logs_id'), table_name='data_sync_logs')
    op.drop_table('data_sync_logs')
    op.drop_index(op.f('ix_cpe_records_id'), table_name='cpe_records')
    op.drop_table('cpe_records')
    op.drop_index(op.f('ix_compliance_records_id'), table_name='compliance_records')
    op.drop_table('compliance_records')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_nasba_providers_sponsor_id'), table_name='nasba_providers')
    op.drop_index(op.f('ix_nasba_providers_id'), table_name='nasba_providers')
    op.drop_table('nasba_providers')
    op.drop_index(op.f('ix_data_sources_id'), table_name='data_sources')
    op.drop_table('data_sources')
    op.drop_table('cpa_jurisdictions')
    # ### end Alembic commands ###
